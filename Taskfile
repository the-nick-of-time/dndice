#!/bin/bash
# See https://github.com/adriancooney/Taskfile for examples

# Sane error handling
set -o errexit -o pipefail

function already_open {
	opened="$(poetry run python list-fftabs.py)"
	# implicit return the exit status of grep
	grep -q "$1$" <<<"$opened"
}

### FUNCTIONS GO HERE
function default {
	: "By default, run test suite"
	task:test
}

function task:test {
	: "Run unit test suite"
	poetry run nose2 --verbose
}

function task:docs {
	: "Build and open docs"
	target="docs/_build/html/index.html"
	poetry run make "$target"
	if ! already_open "$target" ; then
		firefox "$target"
	fi
}

function task:upload_docs {
	: "Upload docs to my pi"
	target="docs/_build/html/index.html"
	poetry run make "$target"
	tar c -zf docs.tar.gz -C docs/_build/html .
	scp docs.tar.gz server@nthurmes.duckdns.org:/tmp
	ssh server@nthurmes.duckdns.org "mkdir -p /var/www/docs/dndice/ && tar x -zf /tmp/docs.tar.gz -C /var/www/docs/dndice"
}

function task:build {
	: "Build wheel from the sources"
	poetry run make "dist/dndice-$(poetry version --short)-py3-none-any.whl"
}

function task:publish {
	: "Publish to PyPi"
	task:build
	poetry publish
}

function task:coverage {
	: "Compile and open unit test coverage statistics"
	target="htmlcov/index.html"
	poetry run make "$target"
	if ! already_open "$target" ; then
		firefox "$target"
	fi
}

function task:test_compatibility {
	: "Run the test suite against multiple versions of python, including one of pypy"
	for v in "python:3.5-alpine" "python:3.8-alpine" "jamiehewland/alpine-pypy:3.6-alpine3.11" ; do
		docker build -t dndice_compat --build-arg image="$v" . && docker run --rm --name rolling_test dndice_compat
	done
}

function task:clean {
	: "Clean up generated files"
	git clean -xdf -e '/venv' -e '/.idea'
}

### /FUNCTIONS GO HERE

# Auto-generate list of tasks
function task:help {
	: "Auto-generate a list of tasks"
	echo "$0 <task> <args>"
	echo "Tasks:"
	compgen -A function | grep '^task:' | cut -d':' -f 2- | while read -r name ; do
		paste <(printf '%s' "$name") <(type "task:$name" | sed -n '4p')
	done
}

if [[ $# -eq 0 ]] ; then
	default
else
	cmd="$1"
	shift
	"task:$cmd" "$@"
fi
